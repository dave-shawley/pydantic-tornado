[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[project]
authors = [{name = "Dave Shawley", email = "daveshawley@gmail.com"}]
classifiers = [
  "Programming Language :: Python :: 3",
  "Operating System :: OS Independent",
]
dependencies = [
  "pydantic>=2.5",
  "tornado>=6.2",
  "yarl>=1.7,<2",
]
license = "BSD-3-Clause"
name = "pydantic-tornado"
requires-python = ">=3.12"
version = "0.0.0"

[tool.coverage.report]
exclude_also = ["typing.Protocol", "typing.overload"]
show_missing = true

[tool.coverage.run]
branch = true
source = ["pydantictornado"]

[tool.hatch.build]
skip-excluded-dirs = true

[tool.hatch.build.targets.wheel]
packages = ["src/pydantictornado"]

[tool.hatch.envs.default]
dependencies = [
  "build>=1,<2",
  "coverage[toml]>=7.4,<8",
  "mkdocs>=1.5,<2",
  "mkdocs-material>9.5,<10",
  "mkdocstrings[python]>=0.24",
  "mkdocs-material-adr>=1,<2",
  "mkdocstrings-python-xref>=1.6,<2",
  "mypy>=1.7,<2",
  "pre-commit>=3.6,<4",
  "pytest>=8,<9",
  "ruff>=0.1.5",
]
python = "python3.12"

[tool.hatch.envs.default.scripts]
github-pages = ["mkdocs gh-deploy --force"]
test = [
  "pre-commit run --all-files",
  "mypy -p pydantictornado -p tests",
  "coverage run -m pytest tests",
  "coverage report",
]

[tool.mypy]
disallow_redefinition = true
implicit_optional = false
mypy_path = ["src"]
plugins = "pydantic.mypy"
skip_version_check = true
strict = true
warn_unreachable = true

[tool.pytest]
failed-first = true
import-mode = "importlib"
log-level = "debug"

[tool.ruff]
indent-width = 4
line-length = 79
target-version = "py312"

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint]
flake8-quotes = {inline-quotes = "single"}
flake8-unused-arguments = {ignore-variadic-names = true}
ignore = [
  "ANN101",  # missing type annotation for self
  "ANN102",  # missing type annotation for cls
  "COM812",  # missing trailing commas
  "D",  # pydocstyle
  "EM",  # raise Error('some literal') is okay IMO
  "ISC",  # implicitly concat'ing strings makes format non-deterministic
  "PT",  # flake8-pytest-style
  "TRY400",  # logging.exception is not universally preferred
  "UP040",  # mypy doesn't support type instead of typing.TypeAlias
]
pycodestyle = {ignore-overlong-task-comments = true}
select = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["SLF001"]
